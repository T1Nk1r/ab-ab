yum -y install wget gcc gcc-c++  openssl-devel 
yum install -y ncurses ncurses-devel libaio-devel  pcre-devel  zlib-devel  cmake  gd-devel

#把安装包都下载到 /usr/local/src 目录
cd /usr/local/src
wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.41.tar.gz
wget http://zlib.net/zlib-1.2.11.tar.gz
wget https://www.openssl.org/source/openssl-1.1.1-pre8.tar.gz
wget http://nginx.org/download/nginx-1.15.1.tar.gz

tar -zxvf nginx-1.15.1.tar.gz
tar -zxvf pcre-8.41.tar.gz
tar -zxvf zlib-1.2.11.tar.gz
tar -zxvf openssl-1.1.1-pre8.tar.gz

#先安装nginx依赖包 pcre zlib openssl 
cd pcre-8.41
./configure  --prefix=/usr/local/pcre
make && make install

cd ..
cd zlib-1.2.11
./configure --prefix=/usr/local/zlib
make && make install

cd ..
cd openssl-1.1.1-pre8
./config shared zlib  --prefix=/usr/local/openssl 
make && make install

#安装nginx以下3项配置是源码位置！即上面下载之后解压的目录
#--with-pcre=/usr/local/src/pcre-8.41   \
#--with-zlib=/usr/local/src/zlib-1.2.11   \
#--with-openssl=/usr/local/src/openssl-1.1.1-pre8  \

cd ..
cd nginx-1.15.1
./configure \
--prefix=/usr/local/nginx \
--pid-path=/usr/local/nginx/logs/nginx.pid \
--conf-path=/usr/local/nginx/conf/nginx.conf \
--with-http_ssl_module \
--with-select_module \
--with-poll_module  \
--with-threads \
--with-http_v2_module \
--with-http_realip_module \
--with-http_image_filter_module \	
--with-http_gunzip_module \
--with-http_gzip_static_module \
--with-stream_ssl_module \
--with-pcre=/usr/local/src/pcre-8.41   \
--with-zlib=/usr/local/src/zlib-1.2.11   \
--with-openssl=/usr/local/src/openssl-1.1.1-pre8  \
--without-mail_pop3_module \
--without-mail_imap_module \
--without-mail_smtp_module

make && make install

#配置nginx服务
cd /etc/init.d/
vi nginx
i

#复制以下内容----------------------------------------------

#!/bin/sh
# nginx - this script starts and stops the nginx daemin
#
# chkconfig:   - 85 15

# description:  Nginx is an HTTP(S) server, HTTP(S) reverse \
#               proxy and IMAP/POP3 proxy server

# processname: nginx
# config:      /usr/local/nginx/conf/nginx.conf
# pidfile:     /usr/local/nginx/logs/nginx.pid

# Source function library.

. /etc/rc.d/init.d/functions

# Source networking configuration.

. /etc/sysconfig/network

# Check that networking is up.

[ "$NETWORKING" = "no" ] && exit 0

nginx="/usr/local/nginx/sbin/nginx"

prog=$(basename $nginx)

NGINX_CONF_FILE="/usr/local/nginx/conf/nginx.conf"

lockfile=/var/lock/subsys/nginx

start() {

    [ -x $nginx ] || exit 5

    [ -f $NGINX_CONF_FILE ] || exit 6

    echo -n $"Starting $prog: "

    daemon $nginx -c $NGINX_CONF_FILE

    retval=$?

    echo

    [ $retval -eq 0 ] && touch $lockfile

    return $retval

}


stop() {

    echo -n $"Stopping $prog: "

    killproc $prog -QUIT

    retval=$?

    echo

    [ $retval -eq 0 ] && rm -f $lockfile

    return $retval

}



restart() {

    configtest || return $?

    stop

    start

}


reload() {

    configtest || return $?

    echo -n $"Reloading $prog: "

    killproc $nginx -HUP

    RETVAL=$?

    echo

}

force_reload() {

    restart

}


configtest() {

  $nginx -t -c $NGINX_CONF_FILE

}



rh_status() {

    status $prog

}


rh_status_q() {

    rh_status >/dev/null 2>&1

}

case "$1" in

    start)

        rh_status_q && exit 0
        $1
        ;;

    stop)


        rh_status_q || exit 0
        $1
        ;;

    restart|configtest)
        $1
        ;;

    reload)
        rh_status_q || exit 7
        $1
        ;;


    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;


    condrestart|try-restart)

        rh_status_q || exit 0
            ;;

    *)

        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}"
        exit 2

esac

#到此结束-----------------------------------------------------------

chmod 755 /etc/init.d/nginx
systemctl enable nginx

 
