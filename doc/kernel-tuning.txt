内核参数优化

#系统自带几个场景下的性能调整配置
tuned-adm list

vi /usr/lib/tuned/throughput-performance/tuned.conf
cpupower idle-set -d 4
cpupower idle-set -d 3
cpupower idle-set -d 2
cpupower frequency-set -g performance
tuned-adm profile throughput-performance
tuned-adm active

-----------------------------------------------------------------------------------------------------------------------------

vi /etc/sysctl.conf

#关闭ipv6节省系统资源
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1

# 避免放大攻击
net.ipv4.icmp_echo_ignore_broadcasts = 1

# 开启恶意icmp错误消息保护
net.ipv4.icmp_ignore_bogus_error_responses = 1

#关闭路由转发
net.ipv4.ip_forward = 0
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0

#开启反向路径过滤
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1

#处理无源路由的包
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

#关闭sysrq功能
kernel.sysrq = 0

#core文件名中添加pid作为扩展名
kernel.core_uses_pid = 1

# 开启SYN洪水攻击保护
net.ipv4.tcp_syncookies = 1

#修改消息队列长度
kernel.msgmnb = 65536
kernel.msgmax = 65536

#设置最大内存共享段大小bytes
kernel.shmmax = 68719476736
kernel.shmall = 4294967296

#timewait的数量，默认180000
net.ipv4.tcp_max_tw_buckets = 6000

#使用 Selective ACK﹐它可以用来查找特定的遗失的数据报--- 因此有助于快速恢复状态。
#对于广域网通信来说这个选项应该启用，但是这会增加对 CPU 的占用。
net.ipv4.tcp_sack = 1

#打开FACK拥塞避免和快速重传功能。(注意，当tcp_sack设置为0的时候，这个值即使设置为1也无效)[这个是TCP连接靠谱的核心功能]
net.ipv4.tcp_fack = 1

#允许TCP发送"两个完全相同"的SACK。
net.ipv4.tcp_dsack=0

#TCP流中重排序的数据报最大数量。
net.ipv4.tcp_reordering=5

#对于某些有bug的打印机提供针对其bug的兼容性。
net.ipv4.tcp_retrans_collapse=0

#对于高速网络，启用了该功能，可以提高数据传输的能力(RFC 1323)。
#对普通地百M网络而言，关闭会降低开销，所以如果不是高速网络，可以考虑设置为0
net.ipv4.tcp_window_scaling = 1

#发送缓存设置min default max
#min：为TCP socket预留用于发送缓冲的内存最小值。
#default：为TCP socket预留用于发送缓冲的内存数量。
#max: 用于TCP socket发送缓冲的内存最大值。
net.ipv4.tcp_wmem = 4096    16384   204800

#接收缓存设置
#同上
net.ipv4.tcp_rmem = 4096    87380   204800
net.core.wmem_default = 8388608
net.core.rmem_default = 8388608
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216

#每个网络接口接收数据包的速率比内核处理这些包的速率快时，允许送到队列的数据包的最大数目
net.core.netdev_max_backlog = 262144

#限制仅仅是为了防止简单的DoS 攻击
net.ipv4.tcp_max_orphans = 32768

#未收到客户端确认信息的连接请求的最大值
net.ipv4.tcp_max_syn_backlog = 16384
#Timestamps 用在其它一些东西中﹐可以防范那些伪造的sequence 号码。
net.ipv4.tcp_timestamps = 0

#内核放弃建立连接之前发送SYNACK 包的数量
net.ipv4.tcp_synack_retries = 1

#内核放弃建立连接之前发送SYN 包的数量
net.ipv4.tcp_syn_retries = 1

#启用timewait 快速回收
net.ipv4.tcp_tw_recycle = 1

#开启重用。允许将TIME-WAIT sockets 重新用于新的TCP 连接
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_mem = 94500000 915000000 927000000
net.ipv4.tcp_fin_timeout = 1

#当keepalive 起用的时候，TCP 发送keepalive 消息的频度。缺省是2 小时
net.ipv4.tcp_keepalive_time = 30
#TCP发送keepalive探测消息的间隔时间（秒），用于确认TCP连接是否有效。
net.ipv4.tcp_keepalive_probes = 3
#探测消息未获得响应时，重发该消息的间隔时间（秒）。
net.ipv4.tcp_keepalive_intvl=15

#在丢弃激活(已建立通讯状况)的TCP连接之前﹐需要进行多少次重试。
net.ipv4.tcp_retries2 = 5
	
#在近端丢弃TCP连接之前﹐要进行多少次重试。
net.ipv4.tcp_orphan_retries=3

#当守护进程太忙而不能接受新的连接，就象对方发送reset消息.
net.ipv4.tcp_abort_on_overflow=0

#允许系统打开的端口范围
net.ipv4.ip_local_port_range = 1024    65000

#修改防火墙表大小，默认65536
#net.netfilter.ip_conntrack_max=655350
#net.netfilter.ip_conntrack_tcp_timeout_established=1200

# 确保无人能修改路由表
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0

#使修改生效。
sysctl -p

-----------------------------------------------------------------------------------------------------------------------------

vi /proc/sys/net/core/

#每个网络接口接收数据包的速率比内核处理这些包的速率快时，允许送到队列的数据包的最大数目，对重负载服务器而言，该值需要调高一点。default 1024.
netdev_max_backlog=16384

#用来限制监听(LISTEN)队列最大数据包的数量，超过这个数量就会导致链接超时或者触发重传机制。对繁忙的服务器,增加该值有助于网络性能.
somaxconn =16384 

#最大的TCP数据接收缓冲
rmem_max=873200

#最大的TCP数据发送缓冲
wmem_max=873200

-----------------------------------------------------------------------------------------------------------------------------
vi /etc/security/limits.conf
# 最后添加
#nofile 表示用户所有进程能打开的最大文件数量
#nproc  表示用户能创建的最大进程数
*     soft   nofile    65535
*     hard   nofile    65535
*     soft   nproc     65535
*     hard   nproc     65535

vi /etc/security/limits.d/20-nproc.conf
#修改 *          soft    nproc     4096
 
*          soft    nproc     65535 
-----------------------------------------------------------------------------------------------------------------------------